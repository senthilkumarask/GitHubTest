# @version $Id: //product/DAF/version/11.1/Endeca/Index/src/module/config/atg/endeca/index/DataDocumentSubmitter.properties#2 $$Change: 882941 $
$class=atg.endeca.index.RecordStoreDocumentSubmitter
$classloader=/atg/endeca/EndecaClassLoaderService
$description=The CAS record store DocumentSubmitter used to submit \
  records to the "data" record store.

# our data store type. 
endecaDataStoreType=SearchInterfaces-data

# If resetActive is true, then active sessions of RecordStoreSubmitter are reset
# in case of an exception when trying to start Endeca transaction 
# This may be necessary in case of an unfinished Endeca transaction
# resetActive=true

# Enable for debugging
loggingDebug=false

# Whether to flush after every record. This can be useful for debugging
# when submitting a particular record to the record store is triggering
# and error.
# 
# flushAfterEveryRecord=true

# Whether we are enabled. Disabled will remake this 
# component report success, even when it didn't do anything.
# Only useful for debugging.
#
# enabled=false

# persist variant suffixes so that we can delete them later.
persistVariantSuffixesDir={atg.dynamo.server.home}/data/idxvariants

# persist the "keys" (locales in our case), that we use
# to multiplex against data stores. This allows us to send deletes
# to all the actual datastores
persistKeysDir={atg.dynamo.server.home}/data/idxkeys

# persist a map of application key to record store name. This allows 
# us to get the record store name during a partial index
persistKeyToRecordStoreName={atg.dynamo.server.home}/data/idxrs


idPropertyName^=/atg/endeca/SearchApplicationConfiguration.recordIdName

# The Endeca indexing application configuration, from which we get our
# port and DataStore splitting strategy, if any
indexingApplicationConfiguration=SearchIndexingApplicationConfiguration
